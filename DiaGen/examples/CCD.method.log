   *** Many-Body Theory Diagram Generator <DIAGEN> v.2016.05.26 (base v.2010.06) ***
                     Author: Dmitry I. Lyakh (Liakh)
                          All rights reserved!
                           ------------------------
Diagram generator started:
----------------------------------------------
INTEGER*4 limit check           :   2147483647
Max tensor exc-level            :           16
Max tensor rank                 :           32
Max same-sort indices per tensor:            9
Max tensors per diagram         :           20
Tensor size (b)                 :          104
Diagram size (b)                :         6120
Diagram record size (b)         :         2520
Max number of diagrams          :      8388608
Diagram pool size (Mb)          :     20160.00
Product pool size (Mb)          :       130.00
Tensor-form register size (Mb)  :         4.00
Tensor-class register size (Mb) :         6.00
----------------------------------------------
Restricted Summation Convention :            T
Intradiagram Optimization Level :         1.00
Disconnected Intermediates      :            T
Factorization of Equations      :            F
Reusing Intermediate Parts      :            F
Fortran indexing convention     :            T
Active index separation         :            F
Explicit symmetry marking       :            F
----------------------------------------------
Deriving equations and code for a user-defined method: CCSDT:
 Processing QMDL (method) file CCSDT.method.xml:
  TASK BEGIN: CCSDT: Energy:
   Generating diagrams:
    product Q0123*H12*expn(T123,6,6)*P0:     102 diagrams (    0.0 min): Canceling ... Ok:     102 diagrams (    0.0 +    0.0 min).
   Total amount of diagrams saved:     102 diagrams:
    Diagram type 1: amount =      102
    Diagram type 2: amount =        0
    Diagram type 3: amount =        0
    Diagram type 4: amount =        0
    Diagram type 5: amount =        0
    Diagram type 6: amount =        0
     1-part diagram amount =      102
    Max number of tensors per diagram =  5
    Max number of parts per diagram   =  1
   Done.
   Drawing diagrams ... Ok (    0.0 min)
   Symbolic part: Spin-integration of formulae, factorization, and code generation:
    Spin-integrating the formulae ...      808 spin-integrated formulae. Ok (    0.0 min)
    Diagram factorization without any storage restrictions:
     Converting diagrams to the canonical intra-optimized digital form ... Ok (    0.0 min)
     Contraction statistics before the inter-diagram factorization (amounts of contractions):
      Scaling:    OpCount:    Storage:
         o0v0           0           8
         o2v0           0          84
         o1v1           7         141
         o0v2           0          44
         o2v1          52           0
         o1v2           6           0
         o4v0           0          68
         o3v1          24         305
         o2v2         105         331
         o1v3          24          63
         o4v1          97           0
         o3v2         295           0
         o2v3         101           0
         o1v4          11           0
         o5v1           0          28
         o4v2          93         124
         o3v3         142         520
         o2v4          23           0
         o5v2          38           0
         o4v3         426           0
         o3v4         122           0
         o5v3          76           0
         o4v4          68           0
         o3v5           6           0
      Digital diagram representation size (Mb)  =    0.12
      Total number of floating-point operations =  0.17174847D+17
      Maximal number of r.h.s tensors per tensor expression   =          5
      Maximal number of slots encountered in a tensor form    =          4
      Maximal number of slots encountered in an intermediate  =          4
      Maximal tensor {type,slot_num} sortlist size            =       1041
     Ok
     Registering basic tensor forms ... 
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           0  2:        113
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   0  2:        113
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           0  3:        240
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   0  3:        240
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           0  4:        455
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   0  4:        455
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           1  2:        777
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   1  2:        777
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           1  3:        572
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   1  3:        572
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           1  4:        362
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   1  4:        362
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  0:          8
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  0:          8
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  2:       1041
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  2:        800
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  3:        471
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  4:        196
     Ok:       168 basic TF. (    0.0 min)
     Registering intermediate tensor forms ... 
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  0:          8
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  2:       1041
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  2:        208
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  3:        471
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  3:        302
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  4:        196
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  4:        188
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  0:          8
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  2:       1041
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  2:         33
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  3:        471
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  3:        150
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  4:        196
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  4:          8
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  0:          8
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  2:       1041
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  3:        471
      DEBUG(csq_generator): sorting non-empty tensor class (tensor_type/slots_amount):   8  3:         19
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  4:        196
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  0:          8
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  2:       1041
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  3:        471
      DEBUG(csq_generator): non-empty tensor class (tensor_type/slots_amount):           8  4:        196
     Ok:       324 intermediate TF. (    0.0 min)
     Renumbering tensor forms to group same-type, same-rank tensors together ... Ok (    0.0 min)
     Registering tensor storage forms (host-arrays) ...        61/       52 basic/intermediate TSF. Ok (    0.0 min)
     Checking consistency before factorization ... Ok (    0.0 min)
     Generating and traversing the Global Contraction Tree ... 
      Generating the Global Contraction Tree: Width =   12 ... Ok (    0.0 min)
      Merging some equivalent ORMO ... Ok: number of tensor expressions/operations =       808/      1716 (    0.0 min)
      Printing the Global Contraction Tree ... Ok (    0.0 min)
      Establishing the Global Contraction Path ... Ok:       3532 actions recorded. (    0.0 min)
      Checking correctness of diagram signs ... Ok (    0.0 min)
      Recognizing reusable parts of composite (right) intermediates ... 
       Total number of composite intermediates      =          0
       Size of the RUI register (Mb)                =      27.00
       Total number of intermediates to compute     =        324
       Number of simple intermediates to compute    =        324
       Number of composite intermediates to compute =          0
       Total number of intermediates to save        =          0
       Number of simple intermediates to save       =          0
       Number of composite intermediates to save    =          0
       Total number of intermediate reuses          =          0
       Number of intermediate parts reuses          =          0
       Number of full intermediate reuses           =          0
       Number of absorbed simple intermediates      =          0
      Ok (    0.0 min)
      Traversing the Global Contraction Path ...       3532 active actions. Ok (    0.0 min)
      Cleaning ... Ok (    0.0 min)
     Done: Contraction statistics after the inter-diagram factorization (amounts of contractions):
      Scaling:    OpCount:    Storage:
         o0v0           0           8
         o2v0           0          84
         o1v1           7         141
         o0v2           0          44
         o2v1          52           0
         o1v2           6           0
         o4v0           0          68
         o3v1          24         305
         o2v2         105         331
         o1v3          24          63
         o4v1          97           0
         o3v2         295           0
         o2v3         101           0
         o1v4          11           0
         o5v1           0          28
         o4v2          93         124
         o3v3         142         520
         o2v4          23           0
         o5v2          38           0
         o4v3         426           0
         o3v4         122           0
         o5v3          76           0
         o4v4          68           0
         o3v5           6           0
      Total number of FLOPs                  =  0.16909171D+17
      Total number of tensor operations      =       1716
      Total number of factorized subdomains  =        808
      Total number of tensor forms:          =        492
       * Basic tensor forms                  =        168
       * Simple intermediate tensor forms    =        324
       * Composite intermediate tensor forms =          0
        + Repeated composite intermediates   =          0
      Total number of host-arrays:           =        113
       * Basic host-arrays                   =         61
       * Intermediate host-arrays            =         52
       * Reusable intermediate host-arrays   =          0
       * Additional intermediate host-arrays =          0
      Tensor types:        H       S       C       L       W       Y       X       R       Z       T       O       P       Q       A       B       E       F       G       I       J       K       M       N       U       V
      Tensor forms:       65      93       0       0       0       0       0       0     334       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Host-arrays :       42       9       0       0       0       0       0       0      62       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
     Ok
    Ok (    0.0 min)
It is time to modify the .fac.ormo.txt file if needed, then press Enter ...
    Unfolding open multiindex permutations ...       1716 -->       3154 unfolded tensor operations. Ok (    0.0 min)
    Analyzing the tensor operation list: 
     Operational cost and memory size scaling distribution ... Ok
     Tracing the tensor instruction list:
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z52(|)
 Line        10392
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z53(e1b|m1b)
 Line        10394
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z56(e1a|m1a)
 Line        10396
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z54(e1be2b|m1bm2b)
 Line        10398
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z57(e1ae1b|m1am1b)
 Line        10400
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z59(e1ae2a|m1am2a)
 Line        10402
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z55(e1be2be3b|m1bm2bm3b)
 Line        10404
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z58(e1ae1be2b|m1am1bm2b)
 Line        10406
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z60(e1ae2ae1b|m1am2am1b)
 Line        10408
      WARNING(statistics_dag): deleted array has not been used in: $SIAL DELETE_ARRAY Z61(e1ae2ae3a|m1am2am3a)
 Line        10410
      Max number of simultaneously opened arrays =    63
     Ok
    Ok (    0.0 min)
    Assembling the code ...     10411 lines processed. Max number of simultaneously opened arrays:      63. Ok (    0.0 min)
   Ok
  END OF TASK: CCSDT: Energy. Ok
  -----------
 Ok
 dgr_tag =   1; dgr_limit =      102; prdt_lim =     61; prod_class =     61; exr_limit =    -1
Ok. Done for      0.0 min. Enjoy!
Note: The following floating-point exceptions are signalling: IEEE_INVALID_FLAG
